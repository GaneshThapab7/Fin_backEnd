/*
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.apache.fineract.client.models.GetRecurringDepositAccountsChartSlabs;
import org.apache.fineract.client.models.GetRecurringDepositAccountsPeriodTypes;

/**
 * GetRecurringDepositAccountsAccountChart
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetRecurringDepositAccountsAccountChart {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Integer accountId;

  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "accountNumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private Long accountNumber;

  public static final String SERIALIZED_NAME_CHART_SLABS = "chartSlabs";
  @SerializedName(SERIALIZED_NAME_CHART_SLABS)
  private Set<GetRecurringDepositAccountsChartSlabs> chartSlabs = null;

  public static final String SERIALIZED_NAME_FROM_DATE = "fromDate";
  @SerializedName(SERIALIZED_NAME_FROM_DATE)
  private LocalDate fromDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_PERIOD_TYPES = "periodTypes";
  @SerializedName(SERIALIZED_NAME_PERIOD_TYPES)
  private Set<GetRecurringDepositAccountsPeriodTypes> periodTypes = null;

  public GetRecurringDepositAccountsAccountChart() { 
  }

  public GetRecurringDepositAccountsAccountChart accountId(Integer accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "")

  public Integer getAccountId() {
    return accountId;
  }


  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }


  public GetRecurringDepositAccountsAccountChart accountNumber(Long accountNumber) {
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAccountNumber() {
    return accountNumber;
  }


  public void setAccountNumber(Long accountNumber) {
    this.accountNumber = accountNumber;
  }


  public GetRecurringDepositAccountsAccountChart chartSlabs(Set<GetRecurringDepositAccountsChartSlabs> chartSlabs) {
    
    this.chartSlabs = chartSlabs;
    return this;
  }

  public GetRecurringDepositAccountsAccountChart addChartSlabsItem(GetRecurringDepositAccountsChartSlabs chartSlabsItem) {
    if (this.chartSlabs == null) {
      this.chartSlabs = new LinkedHashSet<>();
    }
    this.chartSlabs.add(chartSlabsItem);
    return this;
  }

   /**
   * Get chartSlabs
   * @return chartSlabs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetRecurringDepositAccountsChartSlabs> getChartSlabs() {
    return chartSlabs;
  }


  public void setChartSlabs(Set<GetRecurringDepositAccountsChartSlabs> chartSlabs) {
    this.chartSlabs = chartSlabs;
  }


  public GetRecurringDepositAccountsAccountChart fromDate(LocalDate fromDate) {
    
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getFromDate() {
    return fromDate;
  }


  public void setFromDate(LocalDate fromDate) {
    this.fromDate = fromDate;
  }


  public GetRecurringDepositAccountsAccountChart id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4", value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public GetRecurringDepositAccountsAccountChart periodTypes(Set<GetRecurringDepositAccountsPeriodTypes> periodTypes) {
    
    this.periodTypes = periodTypes;
    return this;
  }

  public GetRecurringDepositAccountsAccountChart addPeriodTypesItem(GetRecurringDepositAccountsPeriodTypes periodTypesItem) {
    if (this.periodTypes == null) {
      this.periodTypes = new LinkedHashSet<>();
    }
    this.periodTypes.add(periodTypesItem);
    return this;
  }

   /**
   * Get periodTypes
   * @return periodTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetRecurringDepositAccountsPeriodTypes> getPeriodTypes() {
    return periodTypes;
  }


  public void setPeriodTypes(Set<GetRecurringDepositAccountsPeriodTypes> periodTypes) {
    this.periodTypes = periodTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRecurringDepositAccountsAccountChart getRecurringDepositAccountsAccountChart = (GetRecurringDepositAccountsAccountChart) o;
    return Objects.equals(this.accountId, getRecurringDepositAccountsAccountChart.accountId) &&
        Objects.equals(this.accountNumber, getRecurringDepositAccountsAccountChart.accountNumber) &&
        Objects.equals(this.chartSlabs, getRecurringDepositAccountsAccountChart.chartSlabs) &&
        Objects.equals(this.fromDate, getRecurringDepositAccountsAccountChart.fromDate) &&
        Objects.equals(this.id, getRecurringDepositAccountsAccountChart.id) &&
        Objects.equals(this.periodTypes, getRecurringDepositAccountsAccountChart.periodTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountNumber, chartSlabs, fromDate, id, periodTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRecurringDepositAccountsAccountChart {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    chartSlabs: ").append(toIndentedString(chartSlabs)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    periodTypes: ").append(toIndentedString(periodTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

