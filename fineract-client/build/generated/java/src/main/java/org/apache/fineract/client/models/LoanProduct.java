/*
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.Charge;
import org.apache.fineract.client.models.LoanProductConfigurableAttributes;
import org.apache.fineract.client.models.LoanProductFloatingRates;
import org.apache.fineract.client.models.LoanProductGuaranteeDetails;
import org.apache.fineract.client.models.LoanProductInterestRecalculationDetails;
import org.apache.fineract.client.models.LoanProductRelatedDetail;
import org.apache.fineract.client.models.LoanProductTrancheDetails;
import org.apache.fineract.client.models.LoanTransactionProcessingStrategy;
import org.apache.fineract.client.models.MonetaryCurrency;
import org.apache.fineract.client.models.Money;
import org.apache.fineract.client.models.Rate;

/**
 * LoanProduct
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LoanProduct {
  public static final String SERIALIZED_NAME_ACCOUNTING_DISABLED = "accountingDisabled";
  @SerializedName(SERIALIZED_NAME_ACCOUNTING_DISABLED)
  private Boolean accountingDisabled;

  public static final String SERIALIZED_NAME_ACCOUNTING_TYPE = "accountingType";
  @SerializedName(SERIALIZED_NAME_ACCOUNTING_TYPE)
  private Integer accountingType;

  public static final String SERIALIZED_NAME_ACCRUAL_BASED_ACCOUNTING_ENABLED = "accrualBasedAccountingEnabled";
  @SerializedName(SERIALIZED_NAME_ACCRUAL_BASED_ACCOUNTING_ENABLED)
  private Boolean accrualBasedAccountingEnabled;

  public static final String SERIALIZED_NAME_ALLOW_APPROVED_DISBURSED_AMOUNTS_OVER_APPLIED = "allowApprovedDisbursedAmountsOverApplied";
  @SerializedName(SERIALIZED_NAME_ALLOW_APPROVED_DISBURSED_AMOUNTS_OVER_APPLIED)
  private Boolean allowApprovedDisbursedAmountsOverApplied;

  public static final String SERIALIZED_NAME_ARREARS_BASED_ON_ORIGINAL_SCHEDULE = "arrearsBasedOnOriginalSchedule";
  @SerializedName(SERIALIZED_NAME_ARREARS_BASED_ON_ORIGINAL_SCHEDULE)
  private Boolean arrearsBasedOnOriginalSchedule;

  public static final String SERIALIZED_NAME_CASH_BASED_ACCOUNTING_ENABLED = "cashBasedAccountingEnabled";
  @SerializedName(SERIALIZED_NAME_CASH_BASED_ACCOUNTING_ENABLED)
  private Boolean cashBasedAccountingEnabled;

  public static final String SERIALIZED_NAME_CLOSE_DATE = "closeDate";
  @SerializedName(SERIALIZED_NAME_CLOSE_DATE)
  private LocalDate closeDate;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private MonetaryCurrency currency;

  public static final String SERIALIZED_NAME_DISALLOW_EXPECTED_DISBURSEMENTS = "disallowExpectedDisbursements";
  @SerializedName(SERIALIZED_NAME_DISALLOW_EXPECTED_DISBURSEMENTS)
  private Boolean disallowExpectedDisbursements;

  public static final String SERIALIZED_NAME_EQUAL_AMORTIZATION = "equalAmortization";
  @SerializedName(SERIALIZED_NAME_EQUAL_AMORTIZATION)
  private Boolean equalAmortization;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_FIXED_PRINCIPAL_PERCENTAGE_PER_INSTALLMENT = "fixedPrincipalPercentagePerInstallment";
  @SerializedName(SERIALIZED_NAME_FIXED_PRINCIPAL_PERCENTAGE_PER_INSTALLMENT)
  private BigDecimal fixedPrincipalPercentagePerInstallment;

  public static final String SERIALIZED_NAME_FLOATING_RATES = "floatingRates";
  @SerializedName(SERIALIZED_NAME_FLOATING_RATES)
  private LoanProductFloatingRates floatingRates;

  public static final String SERIALIZED_NAME_HOLD_GUARANTEE_FUNDS_ENABLED = "holdGuaranteeFundsEnabled";
  @SerializedName(SERIALIZED_NAME_HOLD_GUARANTEE_FUNDS_ENABLED)
  private Boolean holdGuaranteeFundsEnabled;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_INCLUDE_IN_BORROWER_CYCLE = "includeInBorrowerCycle";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_BORROWER_CYCLE)
  private Boolean includeInBorrowerCycle;

  public static final String SERIALIZED_NAME_INSTALLMENT_AMOUNT_IN_MULTIPLES_OF = "installmentAmountInMultiplesOf";
  @SerializedName(SERIALIZED_NAME_INSTALLMENT_AMOUNT_IN_MULTIPLES_OF)
  private Integer installmentAmountInMultiplesOf;

  /**
   * Gets or Sets interestPeriodFrequencyType
   */
  @JsonAdapter(InterestPeriodFrequencyTypeEnum.Adapter.class)
  public enum InterestPeriodFrequencyTypeEnum {
    DAYS("DAYS"),
    
    WEEKS("WEEKS"),
    
    MONTHS("MONTHS"),
    
    YEARS("YEARS"),
    
    WHOLE_TERM("WHOLE_TERM"),
    
    INVALID("INVALID");

    private String value;

    InterestPeriodFrequencyTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InterestPeriodFrequencyTypeEnum fromValue(String value) {
      for (InterestPeriodFrequencyTypeEnum b : InterestPeriodFrequencyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InterestPeriodFrequencyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InterestPeriodFrequencyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InterestPeriodFrequencyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InterestPeriodFrequencyTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INTEREST_PERIOD_FREQUENCY_TYPE = "interestPeriodFrequencyType";
  @SerializedName(SERIALIZED_NAME_INTEREST_PERIOD_FREQUENCY_TYPE)
  private InterestPeriodFrequencyTypeEnum interestPeriodFrequencyType;

  public static final String SERIALIZED_NAME_INTEREST_RECALCULATION_ENABLED = "interestRecalculationEnabled";
  @SerializedName(SERIALIZED_NAME_INTEREST_RECALCULATION_ENABLED)
  private Boolean interestRecalculationEnabled;

  public static final String SERIALIZED_NAME_LINKED_TO_FLOATING_INTEREST_RATE = "linkedToFloatingInterestRate";
  @SerializedName(SERIALIZED_NAME_LINKED_TO_FLOATING_INTEREST_RATE)
  private Boolean linkedToFloatingInterestRate;

  public static final String SERIALIZED_NAME_LOAN_PRODUC_TRANCHE_DETAILS = "loanProducTrancheDetails";
  @SerializedName(SERIALIZED_NAME_LOAN_PRODUC_TRANCHE_DETAILS)
  private LoanProductTrancheDetails loanProducTrancheDetails;

  public static final String SERIALIZED_NAME_LOAN_PRODUCT_CHARGES = "loanProductCharges";
  @SerializedName(SERIALIZED_NAME_LOAN_PRODUCT_CHARGES)
  private List<Charge> loanProductCharges = null;

  public static final String SERIALIZED_NAME_LOAN_PRODUCT_CONFIGURABLE_ATTRIBUTES = "loanProductConfigurableAttributes";
  @SerializedName(SERIALIZED_NAME_LOAN_PRODUCT_CONFIGURABLE_ATTRIBUTES)
  private LoanProductConfigurableAttributes loanProductConfigurableAttributes;

  public static final String SERIALIZED_NAME_LOAN_PRODUCT_GUARANTEE_DETAILS = "loanProductGuaranteeDetails";
  @SerializedName(SERIALIZED_NAME_LOAN_PRODUCT_GUARANTEE_DETAILS)
  private LoanProductGuaranteeDetails loanProductGuaranteeDetails;

  public static final String SERIALIZED_NAME_LOAN_PRODUCT_RELATED_DETAIL = "loanProductRelatedDetail";
  @SerializedName(SERIALIZED_NAME_LOAN_PRODUCT_RELATED_DETAIL)
  private LoanProductRelatedDetail loanProductRelatedDetail;

  public static final String SERIALIZED_NAME_MAX_NOMINAL_INTEREST_RATE_PER_PERIOD = "maxNominalInterestRatePerPeriod";
  @SerializedName(SERIALIZED_NAME_MAX_NOMINAL_INTEREST_RATE_PER_PERIOD)
  private BigDecimal maxNominalInterestRatePerPeriod;

  public static final String SERIALIZED_NAME_MAX_NUMBER_OF_REPAYMENTS = "maxNumberOfRepayments";
  @SerializedName(SERIALIZED_NAME_MAX_NUMBER_OF_REPAYMENTS)
  private Integer maxNumberOfRepayments;

  public static final String SERIALIZED_NAME_MAX_PRINCIPAL_AMOUNT = "maxPrincipalAmount";
  @SerializedName(SERIALIZED_NAME_MAX_PRINCIPAL_AMOUNT)
  private Money maxPrincipalAmount;

  public static final String SERIALIZED_NAME_MIN_NOMINAL_INTEREST_RATE_PER_PERIOD = "minNominalInterestRatePerPeriod";
  @SerializedName(SERIALIZED_NAME_MIN_NOMINAL_INTEREST_RATE_PER_PERIOD)
  private BigDecimal minNominalInterestRatePerPeriod;

  public static final String SERIALIZED_NAME_MIN_NUMBER_OF_REPAYMENTS = "minNumberOfRepayments";
  @SerializedName(SERIALIZED_NAME_MIN_NUMBER_OF_REPAYMENTS)
  private Integer minNumberOfRepayments;

  public static final String SERIALIZED_NAME_MIN_PRINCIPAL_AMOUNT = "minPrincipalAmount";
  @SerializedName(SERIALIZED_NAME_MIN_PRINCIPAL_AMOUNT)
  private Money minPrincipalAmount;

  public static final String SERIALIZED_NAME_MINIMUM_DAYS_BETWEEN_DISBURSAL_AND_FIRST_REPAYMENT = "minimumDaysBetweenDisbursalAndFirstRepayment";
  @SerializedName(SERIALIZED_NAME_MINIMUM_DAYS_BETWEEN_DISBURSAL_AND_FIRST_REPAYMENT)
  private Integer minimumDaysBetweenDisbursalAndFirstRepayment;

  public static final String SERIALIZED_NAME_MULTI_DISBURSE_LOAN = "multiDisburseLoan";
  @SerializedName(SERIALIZED_NAME_MULTI_DISBURSE_LOAN)
  private Boolean multiDisburseLoan;

  public static final String SERIALIZED_NAME_NEW = "new";
  @SerializedName(SERIALIZED_NAME_NEW)
  private Boolean _new;

  public static final String SERIALIZED_NAME_NOMINAL_INTEREST_RATE_PER_PERIOD = "nominalInterestRatePerPeriod";
  @SerializedName(SERIALIZED_NAME_NOMINAL_INTEREST_RATE_PER_PERIOD)
  private BigDecimal nominalInterestRatePerPeriod;

  public static final String SERIALIZED_NAME_NUMBER_OF_REPAYMENTS = "numberOfRepayments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_REPAYMENTS)
  private Integer numberOfRepayments;

  public static final String SERIALIZED_NAME_OVER_APPLIED_CALCULATION_TYPE = "overAppliedCalculationType";
  @SerializedName(SERIALIZED_NAME_OVER_APPLIED_CALCULATION_TYPE)
  private String overAppliedCalculationType;

  public static final String SERIALIZED_NAME_OVER_APPLIED_NUMBER = "overAppliedNumber";
  @SerializedName(SERIALIZED_NAME_OVER_APPLIED_NUMBER)
  private Integer overAppliedNumber;

  public static final String SERIALIZED_NAME_PERIODIC_ACCRUAL_ACCOUNTING_ENABLED = "periodicAccrualAccountingEnabled";
  @SerializedName(SERIALIZED_NAME_PERIODIC_ACCRUAL_ACCOUNTING_ENABLED)
  private Boolean periodicAccrualAccountingEnabled;

  public static final String SERIALIZED_NAME_PRINCIPAL_AMOUNT = "principalAmount";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_AMOUNT)
  private Money principalAmount;

  public static final String SERIALIZED_NAME_PRINCIPAL_THRESHOLD_FOR_LAST_INSTALLMENT = "principalThresholdForLastInstallment";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_THRESHOLD_FOR_LAST_INSTALLMENT)
  private BigDecimal principalThresholdForLastInstallment;

  public static final String SERIALIZED_NAME_PRODUCT_INTEREST_RECALCULATION_DETAILS = "productInterestRecalculationDetails";
  @SerializedName(SERIALIZED_NAME_PRODUCT_INTEREST_RECALCULATION_DETAILS)
  private LoanProductInterestRecalculationDetails productInterestRecalculationDetails;

  public static final String SERIALIZED_NAME_RATES = "rates";
  @SerializedName(SERIALIZED_NAME_RATES)
  private List<Rate> rates = null;

  public static final String SERIALIZED_NAME_REPAYMENT_STRATEGY = "repaymentStrategy";
  @SerializedName(SERIALIZED_NAME_REPAYMENT_STRATEGY)
  private LoanTransactionProcessingStrategy repaymentStrategy;

  public static final String SERIALIZED_NAME_SHORT_NAME = "shortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_SYNC_EXPECTED_WITH_DISBURSEMENT_DATE = "syncExpectedWithDisbursementDate";
  @SerializedName(SERIALIZED_NAME_SYNC_EXPECTED_WITH_DISBURSEMENT_DATE)
  private Boolean syncExpectedWithDisbursementDate;

  public static final String SERIALIZED_NAME_UPFRONT_ACCRUAL_ACCOUNTING_ENABLED = "upfrontAccrualAccountingEnabled";
  @SerializedName(SERIALIZED_NAME_UPFRONT_ACCRUAL_ACCOUNTING_ENABLED)
  private Boolean upfrontAccrualAccountingEnabled;

  public LoanProduct() { 
  }

  public LoanProduct accountingDisabled(Boolean accountingDisabled) {
    
    this.accountingDisabled = accountingDisabled;
    return this;
  }

   /**
   * Get accountingDisabled
   * @return accountingDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAccountingDisabled() {
    return accountingDisabled;
  }


  public void setAccountingDisabled(Boolean accountingDisabled) {
    this.accountingDisabled = accountingDisabled;
  }


  public LoanProduct accountingType(Integer accountingType) {
    
    this.accountingType = accountingType;
    return this;
  }

   /**
   * Get accountingType
   * @return accountingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAccountingType() {
    return accountingType;
  }


  public void setAccountingType(Integer accountingType) {
    this.accountingType = accountingType;
  }


  public LoanProduct accrualBasedAccountingEnabled(Boolean accrualBasedAccountingEnabled) {
    
    this.accrualBasedAccountingEnabled = accrualBasedAccountingEnabled;
    return this;
  }

   /**
   * Get accrualBasedAccountingEnabled
   * @return accrualBasedAccountingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAccrualBasedAccountingEnabled() {
    return accrualBasedAccountingEnabled;
  }


  public void setAccrualBasedAccountingEnabled(Boolean accrualBasedAccountingEnabled) {
    this.accrualBasedAccountingEnabled = accrualBasedAccountingEnabled;
  }


  public LoanProduct allowApprovedDisbursedAmountsOverApplied(Boolean allowApprovedDisbursedAmountsOverApplied) {
    
    this.allowApprovedDisbursedAmountsOverApplied = allowApprovedDisbursedAmountsOverApplied;
    return this;
  }

   /**
   * Get allowApprovedDisbursedAmountsOverApplied
   * @return allowApprovedDisbursedAmountsOverApplied
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowApprovedDisbursedAmountsOverApplied() {
    return allowApprovedDisbursedAmountsOverApplied;
  }


  public void setAllowApprovedDisbursedAmountsOverApplied(Boolean allowApprovedDisbursedAmountsOverApplied) {
    this.allowApprovedDisbursedAmountsOverApplied = allowApprovedDisbursedAmountsOverApplied;
  }


  public LoanProduct arrearsBasedOnOriginalSchedule(Boolean arrearsBasedOnOriginalSchedule) {
    
    this.arrearsBasedOnOriginalSchedule = arrearsBasedOnOriginalSchedule;
    return this;
  }

   /**
   * Get arrearsBasedOnOriginalSchedule
   * @return arrearsBasedOnOriginalSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getArrearsBasedOnOriginalSchedule() {
    return arrearsBasedOnOriginalSchedule;
  }


  public void setArrearsBasedOnOriginalSchedule(Boolean arrearsBasedOnOriginalSchedule) {
    this.arrearsBasedOnOriginalSchedule = arrearsBasedOnOriginalSchedule;
  }


  public LoanProduct cashBasedAccountingEnabled(Boolean cashBasedAccountingEnabled) {
    
    this.cashBasedAccountingEnabled = cashBasedAccountingEnabled;
    return this;
  }

   /**
   * Get cashBasedAccountingEnabled
   * @return cashBasedAccountingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCashBasedAccountingEnabled() {
    return cashBasedAccountingEnabled;
  }


  public void setCashBasedAccountingEnabled(Boolean cashBasedAccountingEnabled) {
    this.cashBasedAccountingEnabled = cashBasedAccountingEnabled;
  }


  public LoanProduct closeDate(LocalDate closeDate) {
    
    this.closeDate = closeDate;
    return this;
  }

   /**
   * Get closeDate
   * @return closeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCloseDate() {
    return closeDate;
  }


  public void setCloseDate(LocalDate closeDate) {
    this.closeDate = closeDate;
  }


  public LoanProduct currency(MonetaryCurrency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MonetaryCurrency getCurrency() {
    return currency;
  }


  public void setCurrency(MonetaryCurrency currency) {
    this.currency = currency;
  }


  public LoanProduct disallowExpectedDisbursements(Boolean disallowExpectedDisbursements) {
    
    this.disallowExpectedDisbursements = disallowExpectedDisbursements;
    return this;
  }

   /**
   * Get disallowExpectedDisbursements
   * @return disallowExpectedDisbursements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDisallowExpectedDisbursements() {
    return disallowExpectedDisbursements;
  }


  public void setDisallowExpectedDisbursements(Boolean disallowExpectedDisbursements) {
    this.disallowExpectedDisbursements = disallowExpectedDisbursements;
  }


  public LoanProduct equalAmortization(Boolean equalAmortization) {
    
    this.equalAmortization = equalAmortization;
    return this;
  }

   /**
   * Get equalAmortization
   * @return equalAmortization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEqualAmortization() {
    return equalAmortization;
  }


  public void setEqualAmortization(Boolean equalAmortization) {
    this.equalAmortization = equalAmortization;
  }


  public LoanProduct externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public LoanProduct fixedPrincipalPercentagePerInstallment(BigDecimal fixedPrincipalPercentagePerInstallment) {
    
    this.fixedPrincipalPercentagePerInstallment = fixedPrincipalPercentagePerInstallment;
    return this;
  }

   /**
   * Get fixedPrincipalPercentagePerInstallment
   * @return fixedPrincipalPercentagePerInstallment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getFixedPrincipalPercentagePerInstallment() {
    return fixedPrincipalPercentagePerInstallment;
  }


  public void setFixedPrincipalPercentagePerInstallment(BigDecimal fixedPrincipalPercentagePerInstallment) {
    this.fixedPrincipalPercentagePerInstallment = fixedPrincipalPercentagePerInstallment;
  }


  public LoanProduct floatingRates(LoanProductFloatingRates floatingRates) {
    
    this.floatingRates = floatingRates;
    return this;
  }

   /**
   * Get floatingRates
   * @return floatingRates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanProductFloatingRates getFloatingRates() {
    return floatingRates;
  }


  public void setFloatingRates(LoanProductFloatingRates floatingRates) {
    this.floatingRates = floatingRates;
  }


  public LoanProduct holdGuaranteeFundsEnabled(Boolean holdGuaranteeFundsEnabled) {
    
    this.holdGuaranteeFundsEnabled = holdGuaranteeFundsEnabled;
    return this;
  }

   /**
   * Get holdGuaranteeFundsEnabled
   * @return holdGuaranteeFundsEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHoldGuaranteeFundsEnabled() {
    return holdGuaranteeFundsEnabled;
  }


  public void setHoldGuaranteeFundsEnabled(Boolean holdGuaranteeFundsEnabled) {
    this.holdGuaranteeFundsEnabled = holdGuaranteeFundsEnabled;
  }


  public LoanProduct id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public LoanProduct includeInBorrowerCycle(Boolean includeInBorrowerCycle) {
    
    this.includeInBorrowerCycle = includeInBorrowerCycle;
    return this;
  }

   /**
   * Get includeInBorrowerCycle
   * @return includeInBorrowerCycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInBorrowerCycle() {
    return includeInBorrowerCycle;
  }


  public void setIncludeInBorrowerCycle(Boolean includeInBorrowerCycle) {
    this.includeInBorrowerCycle = includeInBorrowerCycle;
  }


  public LoanProduct installmentAmountInMultiplesOf(Integer installmentAmountInMultiplesOf) {
    
    this.installmentAmountInMultiplesOf = installmentAmountInMultiplesOf;
    return this;
  }

   /**
   * Get installmentAmountInMultiplesOf
   * @return installmentAmountInMultiplesOf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInstallmentAmountInMultiplesOf() {
    return installmentAmountInMultiplesOf;
  }


  public void setInstallmentAmountInMultiplesOf(Integer installmentAmountInMultiplesOf) {
    this.installmentAmountInMultiplesOf = installmentAmountInMultiplesOf;
  }


  public LoanProduct interestPeriodFrequencyType(InterestPeriodFrequencyTypeEnum interestPeriodFrequencyType) {
    
    this.interestPeriodFrequencyType = interestPeriodFrequencyType;
    return this;
  }

   /**
   * Get interestPeriodFrequencyType
   * @return interestPeriodFrequencyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InterestPeriodFrequencyTypeEnum getInterestPeriodFrequencyType() {
    return interestPeriodFrequencyType;
  }


  public void setInterestPeriodFrequencyType(InterestPeriodFrequencyTypeEnum interestPeriodFrequencyType) {
    this.interestPeriodFrequencyType = interestPeriodFrequencyType;
  }


  public LoanProduct interestRecalculationEnabled(Boolean interestRecalculationEnabled) {
    
    this.interestRecalculationEnabled = interestRecalculationEnabled;
    return this;
  }

   /**
   * Get interestRecalculationEnabled
   * @return interestRecalculationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInterestRecalculationEnabled() {
    return interestRecalculationEnabled;
  }


  public void setInterestRecalculationEnabled(Boolean interestRecalculationEnabled) {
    this.interestRecalculationEnabled = interestRecalculationEnabled;
  }


  public LoanProduct linkedToFloatingInterestRate(Boolean linkedToFloatingInterestRate) {
    
    this.linkedToFloatingInterestRate = linkedToFloatingInterestRate;
    return this;
  }

   /**
   * Get linkedToFloatingInterestRate
   * @return linkedToFloatingInterestRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLinkedToFloatingInterestRate() {
    return linkedToFloatingInterestRate;
  }


  public void setLinkedToFloatingInterestRate(Boolean linkedToFloatingInterestRate) {
    this.linkedToFloatingInterestRate = linkedToFloatingInterestRate;
  }


  public LoanProduct loanProducTrancheDetails(LoanProductTrancheDetails loanProducTrancheDetails) {
    
    this.loanProducTrancheDetails = loanProducTrancheDetails;
    return this;
  }

   /**
   * Get loanProducTrancheDetails
   * @return loanProducTrancheDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanProductTrancheDetails getLoanProducTrancheDetails() {
    return loanProducTrancheDetails;
  }


  public void setLoanProducTrancheDetails(LoanProductTrancheDetails loanProducTrancheDetails) {
    this.loanProducTrancheDetails = loanProducTrancheDetails;
  }


  public LoanProduct loanProductCharges(List<Charge> loanProductCharges) {
    
    this.loanProductCharges = loanProductCharges;
    return this;
  }

  public LoanProduct addLoanProductChargesItem(Charge loanProductChargesItem) {
    if (this.loanProductCharges == null) {
      this.loanProductCharges = new ArrayList<>();
    }
    this.loanProductCharges.add(loanProductChargesItem);
    return this;
  }

   /**
   * Get loanProductCharges
   * @return loanProductCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Charge> getLoanProductCharges() {
    return loanProductCharges;
  }


  public void setLoanProductCharges(List<Charge> loanProductCharges) {
    this.loanProductCharges = loanProductCharges;
  }


  public LoanProduct loanProductConfigurableAttributes(LoanProductConfigurableAttributes loanProductConfigurableAttributes) {
    
    this.loanProductConfigurableAttributes = loanProductConfigurableAttributes;
    return this;
  }

   /**
   * Get loanProductConfigurableAttributes
   * @return loanProductConfigurableAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanProductConfigurableAttributes getLoanProductConfigurableAttributes() {
    return loanProductConfigurableAttributes;
  }


  public void setLoanProductConfigurableAttributes(LoanProductConfigurableAttributes loanProductConfigurableAttributes) {
    this.loanProductConfigurableAttributes = loanProductConfigurableAttributes;
  }


  public LoanProduct loanProductGuaranteeDetails(LoanProductGuaranteeDetails loanProductGuaranteeDetails) {
    
    this.loanProductGuaranteeDetails = loanProductGuaranteeDetails;
    return this;
  }

   /**
   * Get loanProductGuaranteeDetails
   * @return loanProductGuaranteeDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanProductGuaranteeDetails getLoanProductGuaranteeDetails() {
    return loanProductGuaranteeDetails;
  }


  public void setLoanProductGuaranteeDetails(LoanProductGuaranteeDetails loanProductGuaranteeDetails) {
    this.loanProductGuaranteeDetails = loanProductGuaranteeDetails;
  }


  public LoanProduct loanProductRelatedDetail(LoanProductRelatedDetail loanProductRelatedDetail) {
    
    this.loanProductRelatedDetail = loanProductRelatedDetail;
    return this;
  }

   /**
   * Get loanProductRelatedDetail
   * @return loanProductRelatedDetail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanProductRelatedDetail getLoanProductRelatedDetail() {
    return loanProductRelatedDetail;
  }


  public void setLoanProductRelatedDetail(LoanProductRelatedDetail loanProductRelatedDetail) {
    this.loanProductRelatedDetail = loanProductRelatedDetail;
  }


  public LoanProduct maxNominalInterestRatePerPeriod(BigDecimal maxNominalInterestRatePerPeriod) {
    
    this.maxNominalInterestRatePerPeriod = maxNominalInterestRatePerPeriod;
    return this;
  }

   /**
   * Get maxNominalInterestRatePerPeriod
   * @return maxNominalInterestRatePerPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxNominalInterestRatePerPeriod() {
    return maxNominalInterestRatePerPeriod;
  }


  public void setMaxNominalInterestRatePerPeriod(BigDecimal maxNominalInterestRatePerPeriod) {
    this.maxNominalInterestRatePerPeriod = maxNominalInterestRatePerPeriod;
  }


  public LoanProduct maxNumberOfRepayments(Integer maxNumberOfRepayments) {
    
    this.maxNumberOfRepayments = maxNumberOfRepayments;
    return this;
  }

   /**
   * Get maxNumberOfRepayments
   * @return maxNumberOfRepayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxNumberOfRepayments() {
    return maxNumberOfRepayments;
  }


  public void setMaxNumberOfRepayments(Integer maxNumberOfRepayments) {
    this.maxNumberOfRepayments = maxNumberOfRepayments;
  }


  public LoanProduct maxPrincipalAmount(Money maxPrincipalAmount) {
    
    this.maxPrincipalAmount = maxPrincipalAmount;
    return this;
  }

   /**
   * Get maxPrincipalAmount
   * @return maxPrincipalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Money getMaxPrincipalAmount() {
    return maxPrincipalAmount;
  }


  public void setMaxPrincipalAmount(Money maxPrincipalAmount) {
    this.maxPrincipalAmount = maxPrincipalAmount;
  }


  public LoanProduct minNominalInterestRatePerPeriod(BigDecimal minNominalInterestRatePerPeriod) {
    
    this.minNominalInterestRatePerPeriod = minNominalInterestRatePerPeriod;
    return this;
  }

   /**
   * Get minNominalInterestRatePerPeriod
   * @return minNominalInterestRatePerPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMinNominalInterestRatePerPeriod() {
    return minNominalInterestRatePerPeriod;
  }


  public void setMinNominalInterestRatePerPeriod(BigDecimal minNominalInterestRatePerPeriod) {
    this.minNominalInterestRatePerPeriod = minNominalInterestRatePerPeriod;
  }


  public LoanProduct minNumberOfRepayments(Integer minNumberOfRepayments) {
    
    this.minNumberOfRepayments = minNumberOfRepayments;
    return this;
  }

   /**
   * Get minNumberOfRepayments
   * @return minNumberOfRepayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMinNumberOfRepayments() {
    return minNumberOfRepayments;
  }


  public void setMinNumberOfRepayments(Integer minNumberOfRepayments) {
    this.minNumberOfRepayments = minNumberOfRepayments;
  }


  public LoanProduct minPrincipalAmount(Money minPrincipalAmount) {
    
    this.minPrincipalAmount = minPrincipalAmount;
    return this;
  }

   /**
   * Get minPrincipalAmount
   * @return minPrincipalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Money getMinPrincipalAmount() {
    return minPrincipalAmount;
  }


  public void setMinPrincipalAmount(Money minPrincipalAmount) {
    this.minPrincipalAmount = minPrincipalAmount;
  }


  public LoanProduct minimumDaysBetweenDisbursalAndFirstRepayment(Integer minimumDaysBetweenDisbursalAndFirstRepayment) {
    
    this.minimumDaysBetweenDisbursalAndFirstRepayment = minimumDaysBetweenDisbursalAndFirstRepayment;
    return this;
  }

   /**
   * Get minimumDaysBetweenDisbursalAndFirstRepayment
   * @return minimumDaysBetweenDisbursalAndFirstRepayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMinimumDaysBetweenDisbursalAndFirstRepayment() {
    return minimumDaysBetweenDisbursalAndFirstRepayment;
  }


  public void setMinimumDaysBetweenDisbursalAndFirstRepayment(Integer minimumDaysBetweenDisbursalAndFirstRepayment) {
    this.minimumDaysBetweenDisbursalAndFirstRepayment = minimumDaysBetweenDisbursalAndFirstRepayment;
  }


  public LoanProduct multiDisburseLoan(Boolean multiDisburseLoan) {
    
    this.multiDisburseLoan = multiDisburseLoan;
    return this;
  }

   /**
   * Get multiDisburseLoan
   * @return multiDisburseLoan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMultiDisburseLoan() {
    return multiDisburseLoan;
  }


  public void setMultiDisburseLoan(Boolean multiDisburseLoan) {
    this.multiDisburseLoan = multiDisburseLoan;
  }


  public LoanProduct _new(Boolean _new) {
    
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNew() {
    return _new;
  }


  public void setNew(Boolean _new) {
    this._new = _new;
  }


  public LoanProduct nominalInterestRatePerPeriod(BigDecimal nominalInterestRatePerPeriod) {
    
    this.nominalInterestRatePerPeriod = nominalInterestRatePerPeriod;
    return this;
  }

   /**
   * Get nominalInterestRatePerPeriod
   * @return nominalInterestRatePerPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getNominalInterestRatePerPeriod() {
    return nominalInterestRatePerPeriod;
  }


  public void setNominalInterestRatePerPeriod(BigDecimal nominalInterestRatePerPeriod) {
    this.nominalInterestRatePerPeriod = nominalInterestRatePerPeriod;
  }


  public LoanProduct numberOfRepayments(Integer numberOfRepayments) {
    
    this.numberOfRepayments = numberOfRepayments;
    return this;
  }

   /**
   * Get numberOfRepayments
   * @return numberOfRepayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumberOfRepayments() {
    return numberOfRepayments;
  }


  public void setNumberOfRepayments(Integer numberOfRepayments) {
    this.numberOfRepayments = numberOfRepayments;
  }


  public LoanProduct overAppliedCalculationType(String overAppliedCalculationType) {
    
    this.overAppliedCalculationType = overAppliedCalculationType;
    return this;
  }

   /**
   * Get overAppliedCalculationType
   * @return overAppliedCalculationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOverAppliedCalculationType() {
    return overAppliedCalculationType;
  }


  public void setOverAppliedCalculationType(String overAppliedCalculationType) {
    this.overAppliedCalculationType = overAppliedCalculationType;
  }


  public LoanProduct overAppliedNumber(Integer overAppliedNumber) {
    
    this.overAppliedNumber = overAppliedNumber;
    return this;
  }

   /**
   * Get overAppliedNumber
   * @return overAppliedNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOverAppliedNumber() {
    return overAppliedNumber;
  }


  public void setOverAppliedNumber(Integer overAppliedNumber) {
    this.overAppliedNumber = overAppliedNumber;
  }


  public LoanProduct periodicAccrualAccountingEnabled(Boolean periodicAccrualAccountingEnabled) {
    
    this.periodicAccrualAccountingEnabled = periodicAccrualAccountingEnabled;
    return this;
  }

   /**
   * Get periodicAccrualAccountingEnabled
   * @return periodicAccrualAccountingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPeriodicAccrualAccountingEnabled() {
    return periodicAccrualAccountingEnabled;
  }


  public void setPeriodicAccrualAccountingEnabled(Boolean periodicAccrualAccountingEnabled) {
    this.periodicAccrualAccountingEnabled = periodicAccrualAccountingEnabled;
  }


  public LoanProduct principalAmount(Money principalAmount) {
    
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   * Get principalAmount
   * @return principalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Money getPrincipalAmount() {
    return principalAmount;
  }


  public void setPrincipalAmount(Money principalAmount) {
    this.principalAmount = principalAmount;
  }


  public LoanProduct principalThresholdForLastInstallment(BigDecimal principalThresholdForLastInstallment) {
    
    this.principalThresholdForLastInstallment = principalThresholdForLastInstallment;
    return this;
  }

   /**
   * Get principalThresholdForLastInstallment
   * @return principalThresholdForLastInstallment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPrincipalThresholdForLastInstallment() {
    return principalThresholdForLastInstallment;
  }


  public void setPrincipalThresholdForLastInstallment(BigDecimal principalThresholdForLastInstallment) {
    this.principalThresholdForLastInstallment = principalThresholdForLastInstallment;
  }


  public LoanProduct productInterestRecalculationDetails(LoanProductInterestRecalculationDetails productInterestRecalculationDetails) {
    
    this.productInterestRecalculationDetails = productInterestRecalculationDetails;
    return this;
  }

   /**
   * Get productInterestRecalculationDetails
   * @return productInterestRecalculationDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanProductInterestRecalculationDetails getProductInterestRecalculationDetails() {
    return productInterestRecalculationDetails;
  }


  public void setProductInterestRecalculationDetails(LoanProductInterestRecalculationDetails productInterestRecalculationDetails) {
    this.productInterestRecalculationDetails = productInterestRecalculationDetails;
  }


  public LoanProduct rates(List<Rate> rates) {
    
    this.rates = rates;
    return this;
  }

  public LoanProduct addRatesItem(Rate ratesItem) {
    if (this.rates == null) {
      this.rates = new ArrayList<>();
    }
    this.rates.add(ratesItem);
    return this;
  }

   /**
   * Get rates
   * @return rates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Rate> getRates() {
    return rates;
  }


  public void setRates(List<Rate> rates) {
    this.rates = rates;
  }


  public LoanProduct repaymentStrategy(LoanTransactionProcessingStrategy repaymentStrategy) {
    
    this.repaymentStrategy = repaymentStrategy;
    return this;
  }

   /**
   * Get repaymentStrategy
   * @return repaymentStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LoanTransactionProcessingStrategy getRepaymentStrategy() {
    return repaymentStrategy;
  }


  public void setRepaymentStrategy(LoanTransactionProcessingStrategy repaymentStrategy) {
    this.repaymentStrategy = repaymentStrategy;
  }


  public LoanProduct shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public LoanProduct startDate(LocalDate startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getStartDate() {
    return startDate;
  }


  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public LoanProduct syncExpectedWithDisbursementDate(Boolean syncExpectedWithDisbursementDate) {
    
    this.syncExpectedWithDisbursementDate = syncExpectedWithDisbursementDate;
    return this;
  }

   /**
   * Get syncExpectedWithDisbursementDate
   * @return syncExpectedWithDisbursementDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSyncExpectedWithDisbursementDate() {
    return syncExpectedWithDisbursementDate;
  }


  public void setSyncExpectedWithDisbursementDate(Boolean syncExpectedWithDisbursementDate) {
    this.syncExpectedWithDisbursementDate = syncExpectedWithDisbursementDate;
  }


  public LoanProduct upfrontAccrualAccountingEnabled(Boolean upfrontAccrualAccountingEnabled) {
    
    this.upfrontAccrualAccountingEnabled = upfrontAccrualAccountingEnabled;
    return this;
  }

   /**
   * Get upfrontAccrualAccountingEnabled
   * @return upfrontAccrualAccountingEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUpfrontAccrualAccountingEnabled() {
    return upfrontAccrualAccountingEnabled;
  }


  public void setUpfrontAccrualAccountingEnabled(Boolean upfrontAccrualAccountingEnabled) {
    this.upfrontAccrualAccountingEnabled = upfrontAccrualAccountingEnabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanProduct loanProduct = (LoanProduct) o;
    return Objects.equals(this.accountingDisabled, loanProduct.accountingDisabled) &&
        Objects.equals(this.accountingType, loanProduct.accountingType) &&
        Objects.equals(this.accrualBasedAccountingEnabled, loanProduct.accrualBasedAccountingEnabled) &&
        Objects.equals(this.allowApprovedDisbursedAmountsOverApplied, loanProduct.allowApprovedDisbursedAmountsOverApplied) &&
        Objects.equals(this.arrearsBasedOnOriginalSchedule, loanProduct.arrearsBasedOnOriginalSchedule) &&
        Objects.equals(this.cashBasedAccountingEnabled, loanProduct.cashBasedAccountingEnabled) &&
        Objects.equals(this.closeDate, loanProduct.closeDate) &&
        Objects.equals(this.currency, loanProduct.currency) &&
        Objects.equals(this.disallowExpectedDisbursements, loanProduct.disallowExpectedDisbursements) &&
        Objects.equals(this.equalAmortization, loanProduct.equalAmortization) &&
        Objects.equals(this.externalId, loanProduct.externalId) &&
        Objects.equals(this.fixedPrincipalPercentagePerInstallment, loanProduct.fixedPrincipalPercentagePerInstallment) &&
        Objects.equals(this.floatingRates, loanProduct.floatingRates) &&
        Objects.equals(this.holdGuaranteeFundsEnabled, loanProduct.holdGuaranteeFundsEnabled) &&
        Objects.equals(this.id, loanProduct.id) &&
        Objects.equals(this.includeInBorrowerCycle, loanProduct.includeInBorrowerCycle) &&
        Objects.equals(this.installmentAmountInMultiplesOf, loanProduct.installmentAmountInMultiplesOf) &&
        Objects.equals(this.interestPeriodFrequencyType, loanProduct.interestPeriodFrequencyType) &&
        Objects.equals(this.interestRecalculationEnabled, loanProduct.interestRecalculationEnabled) &&
        Objects.equals(this.linkedToFloatingInterestRate, loanProduct.linkedToFloatingInterestRate) &&
        Objects.equals(this.loanProducTrancheDetails, loanProduct.loanProducTrancheDetails) &&
        Objects.equals(this.loanProductCharges, loanProduct.loanProductCharges) &&
        Objects.equals(this.loanProductConfigurableAttributes, loanProduct.loanProductConfigurableAttributes) &&
        Objects.equals(this.loanProductGuaranteeDetails, loanProduct.loanProductGuaranteeDetails) &&
        Objects.equals(this.loanProductRelatedDetail, loanProduct.loanProductRelatedDetail) &&
        Objects.equals(this.maxNominalInterestRatePerPeriod, loanProduct.maxNominalInterestRatePerPeriod) &&
        Objects.equals(this.maxNumberOfRepayments, loanProduct.maxNumberOfRepayments) &&
        Objects.equals(this.maxPrincipalAmount, loanProduct.maxPrincipalAmount) &&
        Objects.equals(this.minNominalInterestRatePerPeriod, loanProduct.minNominalInterestRatePerPeriod) &&
        Objects.equals(this.minNumberOfRepayments, loanProduct.minNumberOfRepayments) &&
        Objects.equals(this.minPrincipalAmount, loanProduct.minPrincipalAmount) &&
        Objects.equals(this.minimumDaysBetweenDisbursalAndFirstRepayment, loanProduct.minimumDaysBetweenDisbursalAndFirstRepayment) &&
        Objects.equals(this.multiDisburseLoan, loanProduct.multiDisburseLoan) &&
        Objects.equals(this._new, loanProduct._new) &&
        Objects.equals(this.nominalInterestRatePerPeriod, loanProduct.nominalInterestRatePerPeriod) &&
        Objects.equals(this.numberOfRepayments, loanProduct.numberOfRepayments) &&
        Objects.equals(this.overAppliedCalculationType, loanProduct.overAppliedCalculationType) &&
        Objects.equals(this.overAppliedNumber, loanProduct.overAppliedNumber) &&
        Objects.equals(this.periodicAccrualAccountingEnabled, loanProduct.periodicAccrualAccountingEnabled) &&
        Objects.equals(this.principalAmount, loanProduct.principalAmount) &&
        Objects.equals(this.principalThresholdForLastInstallment, loanProduct.principalThresholdForLastInstallment) &&
        Objects.equals(this.productInterestRecalculationDetails, loanProduct.productInterestRecalculationDetails) &&
        Objects.equals(this.rates, loanProduct.rates) &&
        Objects.equals(this.repaymentStrategy, loanProduct.repaymentStrategy) &&
        Objects.equals(this.shortName, loanProduct.shortName) &&
        Objects.equals(this.startDate, loanProduct.startDate) &&
        Objects.equals(this.syncExpectedWithDisbursementDate, loanProduct.syncExpectedWithDisbursementDate) &&
        Objects.equals(this.upfrontAccrualAccountingEnabled, loanProduct.upfrontAccrualAccountingEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingDisabled, accountingType, accrualBasedAccountingEnabled, allowApprovedDisbursedAmountsOverApplied, arrearsBasedOnOriginalSchedule, cashBasedAccountingEnabled, closeDate, currency, disallowExpectedDisbursements, equalAmortization, externalId, fixedPrincipalPercentagePerInstallment, floatingRates, holdGuaranteeFundsEnabled, id, includeInBorrowerCycle, installmentAmountInMultiplesOf, interestPeriodFrequencyType, interestRecalculationEnabled, linkedToFloatingInterestRate, loanProducTrancheDetails, loanProductCharges, loanProductConfigurableAttributes, loanProductGuaranteeDetails, loanProductRelatedDetail, maxNominalInterestRatePerPeriod, maxNumberOfRepayments, maxPrincipalAmount, minNominalInterestRatePerPeriod, minNumberOfRepayments, minPrincipalAmount, minimumDaysBetweenDisbursalAndFirstRepayment, multiDisburseLoan, _new, nominalInterestRatePerPeriod, numberOfRepayments, overAppliedCalculationType, overAppliedNumber, periodicAccrualAccountingEnabled, principalAmount, principalThresholdForLastInstallment, productInterestRecalculationDetails, rates, repaymentStrategy, shortName, startDate, syncExpectedWithDisbursementDate, upfrontAccrualAccountingEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanProduct {\n");
    sb.append("    accountingDisabled: ").append(toIndentedString(accountingDisabled)).append("\n");
    sb.append("    accountingType: ").append(toIndentedString(accountingType)).append("\n");
    sb.append("    accrualBasedAccountingEnabled: ").append(toIndentedString(accrualBasedAccountingEnabled)).append("\n");
    sb.append("    allowApprovedDisbursedAmountsOverApplied: ").append(toIndentedString(allowApprovedDisbursedAmountsOverApplied)).append("\n");
    sb.append("    arrearsBasedOnOriginalSchedule: ").append(toIndentedString(arrearsBasedOnOriginalSchedule)).append("\n");
    sb.append("    cashBasedAccountingEnabled: ").append(toIndentedString(cashBasedAccountingEnabled)).append("\n");
    sb.append("    closeDate: ").append(toIndentedString(closeDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    disallowExpectedDisbursements: ").append(toIndentedString(disallowExpectedDisbursements)).append("\n");
    sb.append("    equalAmortization: ").append(toIndentedString(equalAmortization)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    fixedPrincipalPercentagePerInstallment: ").append(toIndentedString(fixedPrincipalPercentagePerInstallment)).append("\n");
    sb.append("    floatingRates: ").append(toIndentedString(floatingRates)).append("\n");
    sb.append("    holdGuaranteeFundsEnabled: ").append(toIndentedString(holdGuaranteeFundsEnabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    includeInBorrowerCycle: ").append(toIndentedString(includeInBorrowerCycle)).append("\n");
    sb.append("    installmentAmountInMultiplesOf: ").append(toIndentedString(installmentAmountInMultiplesOf)).append("\n");
    sb.append("    interestPeriodFrequencyType: ").append(toIndentedString(interestPeriodFrequencyType)).append("\n");
    sb.append("    interestRecalculationEnabled: ").append(toIndentedString(interestRecalculationEnabled)).append("\n");
    sb.append("    linkedToFloatingInterestRate: ").append(toIndentedString(linkedToFloatingInterestRate)).append("\n");
    sb.append("    loanProducTrancheDetails: ").append(toIndentedString(loanProducTrancheDetails)).append("\n");
    sb.append("    loanProductCharges: ").append(toIndentedString(loanProductCharges)).append("\n");
    sb.append("    loanProductConfigurableAttributes: ").append(toIndentedString(loanProductConfigurableAttributes)).append("\n");
    sb.append("    loanProductGuaranteeDetails: ").append(toIndentedString(loanProductGuaranteeDetails)).append("\n");
    sb.append("    loanProductRelatedDetail: ").append(toIndentedString(loanProductRelatedDetail)).append("\n");
    sb.append("    maxNominalInterestRatePerPeriod: ").append(toIndentedString(maxNominalInterestRatePerPeriod)).append("\n");
    sb.append("    maxNumberOfRepayments: ").append(toIndentedString(maxNumberOfRepayments)).append("\n");
    sb.append("    maxPrincipalAmount: ").append(toIndentedString(maxPrincipalAmount)).append("\n");
    sb.append("    minNominalInterestRatePerPeriod: ").append(toIndentedString(minNominalInterestRatePerPeriod)).append("\n");
    sb.append("    minNumberOfRepayments: ").append(toIndentedString(minNumberOfRepayments)).append("\n");
    sb.append("    minPrincipalAmount: ").append(toIndentedString(minPrincipalAmount)).append("\n");
    sb.append("    minimumDaysBetweenDisbursalAndFirstRepayment: ").append(toIndentedString(minimumDaysBetweenDisbursalAndFirstRepayment)).append("\n");
    sb.append("    multiDisburseLoan: ").append(toIndentedString(multiDisburseLoan)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("    nominalInterestRatePerPeriod: ").append(toIndentedString(nominalInterestRatePerPeriod)).append("\n");
    sb.append("    numberOfRepayments: ").append(toIndentedString(numberOfRepayments)).append("\n");
    sb.append("    overAppliedCalculationType: ").append(toIndentedString(overAppliedCalculationType)).append("\n");
    sb.append("    overAppliedNumber: ").append(toIndentedString(overAppliedNumber)).append("\n");
    sb.append("    periodicAccrualAccountingEnabled: ").append(toIndentedString(periodicAccrualAccountingEnabled)).append("\n");
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    principalThresholdForLastInstallment: ").append(toIndentedString(principalThresholdForLastInstallment)).append("\n");
    sb.append("    productInterestRecalculationDetails: ").append(toIndentedString(productInterestRecalculationDetails)).append("\n");
    sb.append("    rates: ").append(toIndentedString(rates)).append("\n");
    sb.append("    repaymentStrategy: ").append(toIndentedString(repaymentStrategy)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    syncExpectedWithDisbursementDate: ").append(toIndentedString(syncExpectedWithDisbursementDate)).append("\n");
    sb.append("    upfrontAccrualAccountingEnabled: ").append(toIndentedString(upfrontAccrualAccountingEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

