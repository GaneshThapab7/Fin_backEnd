/*
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.apache.fineract.client.models.GetAccountTransfersFromAccountType;
import org.apache.fineract.client.models.GetAccountTransfersPageItemsToAccountType;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferCurrency;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferFromAccount;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferFromAccountOptions;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferFromClient;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferFromClientOptions;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferFromOffice;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferFromOfficeOptions;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferToAccount;
import org.apache.fineract.client.models.GetAccountTransfersTemplateRefundByTransferToClient;

/**
 * GetAccountTransfersTemplateRefundByTransferResponse
 */
@ApiModel(description = "GetAccountTransfersTemplateRefundByTransferResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetAccountTransfersTemplateRefundByTransferResponse {
  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private GetAccountTransfersTemplateRefundByTransferCurrency currency;

  public static final String SERIALIZED_NAME_FROM_ACCOUNT = "fromAccount";
  @SerializedName(SERIALIZED_NAME_FROM_ACCOUNT)
  private GetAccountTransfersTemplateRefundByTransferFromAccount fromAccount;

  public static final String SERIALIZED_NAME_FROM_ACCOUNT_OPTIONS = "fromAccountOptions";
  @SerializedName(SERIALIZED_NAME_FROM_ACCOUNT_OPTIONS)
  private Set<GetAccountTransfersTemplateRefundByTransferFromAccountOptions> fromAccountOptions = null;

  public static final String SERIALIZED_NAME_FROM_ACCOUNT_TYPE = "fromAccountType";
  @SerializedName(SERIALIZED_NAME_FROM_ACCOUNT_TYPE)
  private GetAccountTransfersPageItemsToAccountType fromAccountType;

  public static final String SERIALIZED_NAME_FROM_ACCOUNT_TYPE_OPTIONS = "fromAccountTypeOptions";
  @SerializedName(SERIALIZED_NAME_FROM_ACCOUNT_TYPE_OPTIONS)
  private Set<GetAccountTransfersFromAccountType> fromAccountTypeOptions = null;

  public static final String SERIALIZED_NAME_FROM_CLIENT = "fromClient";
  @SerializedName(SERIALIZED_NAME_FROM_CLIENT)
  private GetAccountTransfersTemplateRefundByTransferFromClient fromClient;

  public static final String SERIALIZED_NAME_FROM_CLIENT_OPTIONS = "fromClientOptions";
  @SerializedName(SERIALIZED_NAME_FROM_CLIENT_OPTIONS)
  private Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> fromClientOptions = null;

  public static final String SERIALIZED_NAME_FROM_OFFICE = "fromOffice";
  @SerializedName(SERIALIZED_NAME_FROM_OFFICE)
  private GetAccountTransfersTemplateRefundByTransferFromOffice fromOffice;

  public static final String SERIALIZED_NAME_FROM_OFFICE_OPTIONS = "fromOfficeOptions";
  @SerializedName(SERIALIZED_NAME_FROM_OFFICE_OPTIONS)
  private Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> fromOfficeOptions = null;

  public static final String SERIALIZED_NAME_TO_ACCOUNT = "toAccount";
  @SerializedName(SERIALIZED_NAME_TO_ACCOUNT)
  private GetAccountTransfersTemplateRefundByTransferToAccount toAccount;

  public static final String SERIALIZED_NAME_TO_ACCOUNT_OPTIONS = "toAccountOptions";
  @SerializedName(SERIALIZED_NAME_TO_ACCOUNT_OPTIONS)
  private Set<GetAccountTransfersTemplateRefundByTransferToAccount> toAccountOptions = null;

  public static final String SERIALIZED_NAME_TO_ACCOUNT_TYPE = "toAccountType";
  @SerializedName(SERIALIZED_NAME_TO_ACCOUNT_TYPE)
  private GetAccountTransfersFromAccountType toAccountType;

  public static final String SERIALIZED_NAME_TO_ACCOUNT_TYPE_OPTIONS = "toAccountTypeOptions";
  @SerializedName(SERIALIZED_NAME_TO_ACCOUNT_TYPE_OPTIONS)
  private Set<GetAccountTransfersFromAccountType> toAccountTypeOptions = null;

  public static final String SERIALIZED_NAME_TO_CLIENT = "toClient";
  @SerializedName(SERIALIZED_NAME_TO_CLIENT)
  private GetAccountTransfersTemplateRefundByTransferToClient toClient;

  public static final String SERIALIZED_NAME_TO_CLIENT_OPTIONS = "toClientOptions";
  @SerializedName(SERIALIZED_NAME_TO_CLIENT_OPTIONS)
  private Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> toClientOptions = null;

  public static final String SERIALIZED_NAME_TO_OFFICE = "toOffice";
  @SerializedName(SERIALIZED_NAME_TO_OFFICE)
  private GetAccountTransfersTemplateRefundByTransferFromOffice toOffice;

  public static final String SERIALIZED_NAME_TO_OFFICE_OPTIONS = "toOfficeOptions";
  @SerializedName(SERIALIZED_NAME_TO_OFFICE_OPTIONS)
  private Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> toOfficeOptions = null;

  public static final String SERIALIZED_NAME_TRANSFER_AMOUNT = "transferAmount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_AMOUNT)
  private Float transferAmount;

  public static final String SERIALIZED_NAME_TRANSFER_DATE = "transferDate";
  @SerializedName(SERIALIZED_NAME_TRANSFER_DATE)
  private LocalDate transferDate;

  public GetAccountTransfersTemplateRefundByTransferResponse() { 
  }

  public GetAccountTransfersTemplateRefundByTransferResponse currency(GetAccountTransfersTemplateRefundByTransferCurrency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferCurrency getCurrency() {
    return currency;
  }


  public void setCurrency(GetAccountTransfersTemplateRefundByTransferCurrency currency) {
    this.currency = currency;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromAccount(GetAccountTransfersTemplateRefundByTransferFromAccount fromAccount) {
    
    this.fromAccount = fromAccount;
    return this;
  }

   /**
   * Get fromAccount
   * @return fromAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferFromAccount getFromAccount() {
    return fromAccount;
  }


  public void setFromAccount(GetAccountTransfersTemplateRefundByTransferFromAccount fromAccount) {
    this.fromAccount = fromAccount;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromAccountOptions(Set<GetAccountTransfersTemplateRefundByTransferFromAccountOptions> fromAccountOptions) {
    
    this.fromAccountOptions = fromAccountOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addFromAccountOptionsItem(GetAccountTransfersTemplateRefundByTransferFromAccountOptions fromAccountOptionsItem) {
    if (this.fromAccountOptions == null) {
      this.fromAccountOptions = new LinkedHashSet<>();
    }
    this.fromAccountOptions.add(fromAccountOptionsItem);
    return this;
  }

   /**
   * Get fromAccountOptions
   * @return fromAccountOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersTemplateRefundByTransferFromAccountOptions> getFromAccountOptions() {
    return fromAccountOptions;
  }


  public void setFromAccountOptions(Set<GetAccountTransfersTemplateRefundByTransferFromAccountOptions> fromAccountOptions) {
    this.fromAccountOptions = fromAccountOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromAccountType(GetAccountTransfersPageItemsToAccountType fromAccountType) {
    
    this.fromAccountType = fromAccountType;
    return this;
  }

   /**
   * Get fromAccountType
   * @return fromAccountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersPageItemsToAccountType getFromAccountType() {
    return fromAccountType;
  }


  public void setFromAccountType(GetAccountTransfersPageItemsToAccountType fromAccountType) {
    this.fromAccountType = fromAccountType;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromAccountTypeOptions(Set<GetAccountTransfersFromAccountType> fromAccountTypeOptions) {
    
    this.fromAccountTypeOptions = fromAccountTypeOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addFromAccountTypeOptionsItem(GetAccountTransfersFromAccountType fromAccountTypeOptionsItem) {
    if (this.fromAccountTypeOptions == null) {
      this.fromAccountTypeOptions = new LinkedHashSet<>();
    }
    this.fromAccountTypeOptions.add(fromAccountTypeOptionsItem);
    return this;
  }

   /**
   * Get fromAccountTypeOptions
   * @return fromAccountTypeOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersFromAccountType> getFromAccountTypeOptions() {
    return fromAccountTypeOptions;
  }


  public void setFromAccountTypeOptions(Set<GetAccountTransfersFromAccountType> fromAccountTypeOptions) {
    this.fromAccountTypeOptions = fromAccountTypeOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromClient(GetAccountTransfersTemplateRefundByTransferFromClient fromClient) {
    
    this.fromClient = fromClient;
    return this;
  }

   /**
   * Get fromClient
   * @return fromClient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferFromClient getFromClient() {
    return fromClient;
  }


  public void setFromClient(GetAccountTransfersTemplateRefundByTransferFromClient fromClient) {
    this.fromClient = fromClient;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromClientOptions(Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> fromClientOptions) {
    
    this.fromClientOptions = fromClientOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addFromClientOptionsItem(GetAccountTransfersTemplateRefundByTransferFromClientOptions fromClientOptionsItem) {
    if (this.fromClientOptions == null) {
      this.fromClientOptions = new LinkedHashSet<>();
    }
    this.fromClientOptions.add(fromClientOptionsItem);
    return this;
  }

   /**
   * Get fromClientOptions
   * @return fromClientOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> getFromClientOptions() {
    return fromClientOptions;
  }


  public void setFromClientOptions(Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> fromClientOptions) {
    this.fromClientOptions = fromClientOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromOffice(GetAccountTransfersTemplateRefundByTransferFromOffice fromOffice) {
    
    this.fromOffice = fromOffice;
    return this;
  }

   /**
   * Get fromOffice
   * @return fromOffice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferFromOffice getFromOffice() {
    return fromOffice;
  }


  public void setFromOffice(GetAccountTransfersTemplateRefundByTransferFromOffice fromOffice) {
    this.fromOffice = fromOffice;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse fromOfficeOptions(Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> fromOfficeOptions) {
    
    this.fromOfficeOptions = fromOfficeOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addFromOfficeOptionsItem(GetAccountTransfersTemplateRefundByTransferFromOfficeOptions fromOfficeOptionsItem) {
    if (this.fromOfficeOptions == null) {
      this.fromOfficeOptions = new LinkedHashSet<>();
    }
    this.fromOfficeOptions.add(fromOfficeOptionsItem);
    return this;
  }

   /**
   * Get fromOfficeOptions
   * @return fromOfficeOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> getFromOfficeOptions() {
    return fromOfficeOptions;
  }


  public void setFromOfficeOptions(Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> fromOfficeOptions) {
    this.fromOfficeOptions = fromOfficeOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toAccount(GetAccountTransfersTemplateRefundByTransferToAccount toAccount) {
    
    this.toAccount = toAccount;
    return this;
  }

   /**
   * Get toAccount
   * @return toAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferToAccount getToAccount() {
    return toAccount;
  }


  public void setToAccount(GetAccountTransfersTemplateRefundByTransferToAccount toAccount) {
    this.toAccount = toAccount;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toAccountOptions(Set<GetAccountTransfersTemplateRefundByTransferToAccount> toAccountOptions) {
    
    this.toAccountOptions = toAccountOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addToAccountOptionsItem(GetAccountTransfersTemplateRefundByTransferToAccount toAccountOptionsItem) {
    if (this.toAccountOptions == null) {
      this.toAccountOptions = new LinkedHashSet<>();
    }
    this.toAccountOptions.add(toAccountOptionsItem);
    return this;
  }

   /**
   * Get toAccountOptions
   * @return toAccountOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersTemplateRefundByTransferToAccount> getToAccountOptions() {
    return toAccountOptions;
  }


  public void setToAccountOptions(Set<GetAccountTransfersTemplateRefundByTransferToAccount> toAccountOptions) {
    this.toAccountOptions = toAccountOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toAccountType(GetAccountTransfersFromAccountType toAccountType) {
    
    this.toAccountType = toAccountType;
    return this;
  }

   /**
   * Get toAccountType
   * @return toAccountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersFromAccountType getToAccountType() {
    return toAccountType;
  }


  public void setToAccountType(GetAccountTransfersFromAccountType toAccountType) {
    this.toAccountType = toAccountType;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toAccountTypeOptions(Set<GetAccountTransfersFromAccountType> toAccountTypeOptions) {
    
    this.toAccountTypeOptions = toAccountTypeOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addToAccountTypeOptionsItem(GetAccountTransfersFromAccountType toAccountTypeOptionsItem) {
    if (this.toAccountTypeOptions == null) {
      this.toAccountTypeOptions = new LinkedHashSet<>();
    }
    this.toAccountTypeOptions.add(toAccountTypeOptionsItem);
    return this;
  }

   /**
   * Get toAccountTypeOptions
   * @return toAccountTypeOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersFromAccountType> getToAccountTypeOptions() {
    return toAccountTypeOptions;
  }


  public void setToAccountTypeOptions(Set<GetAccountTransfersFromAccountType> toAccountTypeOptions) {
    this.toAccountTypeOptions = toAccountTypeOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toClient(GetAccountTransfersTemplateRefundByTransferToClient toClient) {
    
    this.toClient = toClient;
    return this;
  }

   /**
   * Get toClient
   * @return toClient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferToClient getToClient() {
    return toClient;
  }


  public void setToClient(GetAccountTransfersTemplateRefundByTransferToClient toClient) {
    this.toClient = toClient;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toClientOptions(Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> toClientOptions) {
    
    this.toClientOptions = toClientOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addToClientOptionsItem(GetAccountTransfersTemplateRefundByTransferFromClientOptions toClientOptionsItem) {
    if (this.toClientOptions == null) {
      this.toClientOptions = new LinkedHashSet<>();
    }
    this.toClientOptions.add(toClientOptionsItem);
    return this;
  }

   /**
   * Get toClientOptions
   * @return toClientOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> getToClientOptions() {
    return toClientOptions;
  }


  public void setToClientOptions(Set<GetAccountTransfersTemplateRefundByTransferFromClientOptions> toClientOptions) {
    this.toClientOptions = toClientOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toOffice(GetAccountTransfersTemplateRefundByTransferFromOffice toOffice) {
    
    this.toOffice = toOffice;
    return this;
  }

   /**
   * Get toOffice
   * @return toOffice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetAccountTransfersTemplateRefundByTransferFromOffice getToOffice() {
    return toOffice;
  }


  public void setToOffice(GetAccountTransfersTemplateRefundByTransferFromOffice toOffice) {
    this.toOffice = toOffice;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse toOfficeOptions(Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> toOfficeOptions) {
    
    this.toOfficeOptions = toOfficeOptions;
    return this;
  }

  public GetAccountTransfersTemplateRefundByTransferResponse addToOfficeOptionsItem(GetAccountTransfersTemplateRefundByTransferFromOfficeOptions toOfficeOptionsItem) {
    if (this.toOfficeOptions == null) {
      this.toOfficeOptions = new LinkedHashSet<>();
    }
    this.toOfficeOptions.add(toOfficeOptionsItem);
    return this;
  }

   /**
   * Get toOfficeOptions
   * @return toOfficeOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> getToOfficeOptions() {
    return toOfficeOptions;
  }


  public void setToOfficeOptions(Set<GetAccountTransfersTemplateRefundByTransferFromOfficeOptions> toOfficeOptions) {
    this.toOfficeOptions = toOfficeOptions;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse transferAmount(Float transferAmount) {
    
    this.transferAmount = transferAmount;
    return this;
  }

   /**
   * Get transferAmount
   * @return transferAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "130", value = "")

  public Float getTransferAmount() {
    return transferAmount;
  }


  public void setTransferAmount(Float transferAmount) {
    this.transferAmount = transferAmount;
  }


  public GetAccountTransfersTemplateRefundByTransferResponse transferDate(LocalDate transferDate) {
    
    this.transferDate = transferDate;
    return this;
  }

   /**
   * Get transferDate
   * @return transferDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getTransferDate() {
    return transferDate;
  }


  public void setTransferDate(LocalDate transferDate) {
    this.transferDate = transferDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountTransfersTemplateRefundByTransferResponse getAccountTransfersTemplateRefundByTransferResponse = (GetAccountTransfersTemplateRefundByTransferResponse) o;
    return Objects.equals(this.currency, getAccountTransfersTemplateRefundByTransferResponse.currency) &&
        Objects.equals(this.fromAccount, getAccountTransfersTemplateRefundByTransferResponse.fromAccount) &&
        Objects.equals(this.fromAccountOptions, getAccountTransfersTemplateRefundByTransferResponse.fromAccountOptions) &&
        Objects.equals(this.fromAccountType, getAccountTransfersTemplateRefundByTransferResponse.fromAccountType) &&
        Objects.equals(this.fromAccountTypeOptions, getAccountTransfersTemplateRefundByTransferResponse.fromAccountTypeOptions) &&
        Objects.equals(this.fromClient, getAccountTransfersTemplateRefundByTransferResponse.fromClient) &&
        Objects.equals(this.fromClientOptions, getAccountTransfersTemplateRefundByTransferResponse.fromClientOptions) &&
        Objects.equals(this.fromOffice, getAccountTransfersTemplateRefundByTransferResponse.fromOffice) &&
        Objects.equals(this.fromOfficeOptions, getAccountTransfersTemplateRefundByTransferResponse.fromOfficeOptions) &&
        Objects.equals(this.toAccount, getAccountTransfersTemplateRefundByTransferResponse.toAccount) &&
        Objects.equals(this.toAccountOptions, getAccountTransfersTemplateRefundByTransferResponse.toAccountOptions) &&
        Objects.equals(this.toAccountType, getAccountTransfersTemplateRefundByTransferResponse.toAccountType) &&
        Objects.equals(this.toAccountTypeOptions, getAccountTransfersTemplateRefundByTransferResponse.toAccountTypeOptions) &&
        Objects.equals(this.toClient, getAccountTransfersTemplateRefundByTransferResponse.toClient) &&
        Objects.equals(this.toClientOptions, getAccountTransfersTemplateRefundByTransferResponse.toClientOptions) &&
        Objects.equals(this.toOffice, getAccountTransfersTemplateRefundByTransferResponse.toOffice) &&
        Objects.equals(this.toOfficeOptions, getAccountTransfersTemplateRefundByTransferResponse.toOfficeOptions) &&
        Objects.equals(this.transferAmount, getAccountTransfersTemplateRefundByTransferResponse.transferAmount) &&
        Objects.equals(this.transferDate, getAccountTransfersTemplateRefundByTransferResponse.transferDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, fromAccount, fromAccountOptions, fromAccountType, fromAccountTypeOptions, fromClient, fromClientOptions, fromOffice, fromOfficeOptions, toAccount, toAccountOptions, toAccountType, toAccountTypeOptions, toClient, toClientOptions, toOffice, toOfficeOptions, transferAmount, transferDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountTransfersTemplateRefundByTransferResponse {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    fromAccount: ").append(toIndentedString(fromAccount)).append("\n");
    sb.append("    fromAccountOptions: ").append(toIndentedString(fromAccountOptions)).append("\n");
    sb.append("    fromAccountType: ").append(toIndentedString(fromAccountType)).append("\n");
    sb.append("    fromAccountTypeOptions: ").append(toIndentedString(fromAccountTypeOptions)).append("\n");
    sb.append("    fromClient: ").append(toIndentedString(fromClient)).append("\n");
    sb.append("    fromClientOptions: ").append(toIndentedString(fromClientOptions)).append("\n");
    sb.append("    fromOffice: ").append(toIndentedString(fromOffice)).append("\n");
    sb.append("    fromOfficeOptions: ").append(toIndentedString(fromOfficeOptions)).append("\n");
    sb.append("    toAccount: ").append(toIndentedString(toAccount)).append("\n");
    sb.append("    toAccountOptions: ").append(toIndentedString(toAccountOptions)).append("\n");
    sb.append("    toAccountType: ").append(toIndentedString(toAccountType)).append("\n");
    sb.append("    toAccountTypeOptions: ").append(toIndentedString(toAccountTypeOptions)).append("\n");
    sb.append("    toClient: ").append(toIndentedString(toClient)).append("\n");
    sb.append("    toClientOptions: ").append(toIndentedString(toClientOptions)).append("\n");
    sb.append("    toOffice: ").append(toIndentedString(toOffice)).append("\n");
    sb.append("    toOfficeOptions: ").append(toIndentedString(toOfficeOptions)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    transferDate: ").append(toIndentedString(transferDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

