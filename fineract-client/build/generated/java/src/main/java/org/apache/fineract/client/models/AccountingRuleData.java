/*
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.AccountingTagRuleData;

/**
 * AccountingRuleData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AccountingRuleData {
  public static final String SERIALIZED_NAME_CREDIT_TAGS = "creditTags";
  @SerializedName(SERIALIZED_NAME_CREDIT_TAGS)
  private List<AccountingTagRuleData> creditTags = null;

  public static final String SERIALIZED_NAME_DEBIT_TAGS = "debitTags";
  @SerializedName(SERIALIZED_NAME_DEBIT_TAGS)
  private List<AccountingTagRuleData> debitTags = null;

  public AccountingRuleData() { 
  }

  public AccountingRuleData creditTags(List<AccountingTagRuleData> creditTags) {
    
    this.creditTags = creditTags;
    return this;
  }

  public AccountingRuleData addCreditTagsItem(AccountingTagRuleData creditTagsItem) {
    if (this.creditTags == null) {
      this.creditTags = new ArrayList<>();
    }
    this.creditTags.add(creditTagsItem);
    return this;
  }

   /**
   * Get creditTags
   * @return creditTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccountingTagRuleData> getCreditTags() {
    return creditTags;
  }


  public void setCreditTags(List<AccountingTagRuleData> creditTags) {
    this.creditTags = creditTags;
  }


  public AccountingRuleData debitTags(List<AccountingTagRuleData> debitTags) {
    
    this.debitTags = debitTags;
    return this;
  }

  public AccountingRuleData addDebitTagsItem(AccountingTagRuleData debitTagsItem) {
    if (this.debitTags == null) {
      this.debitTags = new ArrayList<>();
    }
    this.debitTags.add(debitTagsItem);
    return this;
  }

   /**
   * Get debitTags
   * @return debitTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccountingTagRuleData> getDebitTags() {
    return debitTags;
  }


  public void setDebitTags(List<AccountingTagRuleData> debitTags) {
    this.debitTags = debitTags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountingRuleData accountingRuleData = (AccountingRuleData) o;
    return Objects.equals(this.creditTags, accountingRuleData.creditTags) &&
        Objects.equals(this.debitTags, accountingRuleData.debitTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditTags, debitTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountingRuleData {\n");
    sb.append("    creditTags: ").append(toIndentedString(creditTags)).append("\n");
    sb.append("    debitTags: ").append(toIndentedString(debitTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

