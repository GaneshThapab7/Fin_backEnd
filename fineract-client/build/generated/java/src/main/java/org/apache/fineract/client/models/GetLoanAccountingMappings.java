/*
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.apache.fineract.client.models.GetLoanFundSourceAccount;
import org.apache.fineract.client.models.GetLoanIncomeFromFeeAccount;
import org.apache.fineract.client.models.GetLoanIncomeFromPenaltyAccount;
import org.apache.fineract.client.models.GetLoanInterestOnLoanAccount;
import org.apache.fineract.client.models.GetLoanOverpaymentLiabilityAccount;
import org.apache.fineract.client.models.GetLoanPortfolioAccount;
import org.apache.fineract.client.models.GetLoanTransfersInSuspenseAccount;
import org.apache.fineract.client.models.GetLoanWriteOffAccount;

/**
 * GetLoanAccountingMappings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetLoanAccountingMappings {
  public static final String SERIALIZED_NAME_FUND_SOURCE_ACCOUNT = "fundSourceAccount";
  @SerializedName(SERIALIZED_NAME_FUND_SOURCE_ACCOUNT)
  private GetLoanFundSourceAccount fundSourceAccount;

  public static final String SERIALIZED_NAME_INCOME_FROM_FEE_ACCOUNT = "incomeFromFeeAccount";
  @SerializedName(SERIALIZED_NAME_INCOME_FROM_FEE_ACCOUNT)
  private GetLoanIncomeFromFeeAccount incomeFromFeeAccount;

  public static final String SERIALIZED_NAME_INCOME_FROM_PENALTY_ACCOUNT = "incomeFromPenaltyAccount";
  @SerializedName(SERIALIZED_NAME_INCOME_FROM_PENALTY_ACCOUNT)
  private GetLoanIncomeFromPenaltyAccount incomeFromPenaltyAccount;

  public static final String SERIALIZED_NAME_INTEREST_ON_LOAN_ACCOUNT = "interestOnLoanAccount";
  @SerializedName(SERIALIZED_NAME_INTEREST_ON_LOAN_ACCOUNT)
  private GetLoanInterestOnLoanAccount interestOnLoanAccount;

  public static final String SERIALIZED_NAME_LOAN_PORTFOLIO_ACCOUNT = "loanPortfolioAccount";
  @SerializedName(SERIALIZED_NAME_LOAN_PORTFOLIO_ACCOUNT)
  private GetLoanPortfolioAccount loanPortfolioAccount;

  public static final String SERIALIZED_NAME_OVERPAYMENT_LIABILITY_ACCOUNT = "overpaymentLiabilityAccount";
  @SerializedName(SERIALIZED_NAME_OVERPAYMENT_LIABILITY_ACCOUNT)
  private GetLoanOverpaymentLiabilityAccount overpaymentLiabilityAccount;

  public static final String SERIALIZED_NAME_TRANSFERS_IN_SUSPENSE_ACCOUNT = "transfersInSuspenseAccount";
  @SerializedName(SERIALIZED_NAME_TRANSFERS_IN_SUSPENSE_ACCOUNT)
  private GetLoanTransfersInSuspenseAccount transfersInSuspenseAccount;

  public static final String SERIALIZED_NAME_WRITE_OFF_ACCOUNT = "writeOffAccount";
  @SerializedName(SERIALIZED_NAME_WRITE_OFF_ACCOUNT)
  private GetLoanWriteOffAccount writeOffAccount;

  public GetLoanAccountingMappings() { 
  }

  public GetLoanAccountingMappings fundSourceAccount(GetLoanFundSourceAccount fundSourceAccount) {
    
    this.fundSourceAccount = fundSourceAccount;
    return this;
  }

   /**
   * Get fundSourceAccount
   * @return fundSourceAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanFundSourceAccount getFundSourceAccount() {
    return fundSourceAccount;
  }


  public void setFundSourceAccount(GetLoanFundSourceAccount fundSourceAccount) {
    this.fundSourceAccount = fundSourceAccount;
  }


  public GetLoanAccountingMappings incomeFromFeeAccount(GetLoanIncomeFromFeeAccount incomeFromFeeAccount) {
    
    this.incomeFromFeeAccount = incomeFromFeeAccount;
    return this;
  }

   /**
   * Get incomeFromFeeAccount
   * @return incomeFromFeeAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanIncomeFromFeeAccount getIncomeFromFeeAccount() {
    return incomeFromFeeAccount;
  }


  public void setIncomeFromFeeAccount(GetLoanIncomeFromFeeAccount incomeFromFeeAccount) {
    this.incomeFromFeeAccount = incomeFromFeeAccount;
  }


  public GetLoanAccountingMappings incomeFromPenaltyAccount(GetLoanIncomeFromPenaltyAccount incomeFromPenaltyAccount) {
    
    this.incomeFromPenaltyAccount = incomeFromPenaltyAccount;
    return this;
  }

   /**
   * Get incomeFromPenaltyAccount
   * @return incomeFromPenaltyAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanIncomeFromPenaltyAccount getIncomeFromPenaltyAccount() {
    return incomeFromPenaltyAccount;
  }


  public void setIncomeFromPenaltyAccount(GetLoanIncomeFromPenaltyAccount incomeFromPenaltyAccount) {
    this.incomeFromPenaltyAccount = incomeFromPenaltyAccount;
  }


  public GetLoanAccountingMappings interestOnLoanAccount(GetLoanInterestOnLoanAccount interestOnLoanAccount) {
    
    this.interestOnLoanAccount = interestOnLoanAccount;
    return this;
  }

   /**
   * Get interestOnLoanAccount
   * @return interestOnLoanAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanInterestOnLoanAccount getInterestOnLoanAccount() {
    return interestOnLoanAccount;
  }


  public void setInterestOnLoanAccount(GetLoanInterestOnLoanAccount interestOnLoanAccount) {
    this.interestOnLoanAccount = interestOnLoanAccount;
  }


  public GetLoanAccountingMappings loanPortfolioAccount(GetLoanPortfolioAccount loanPortfolioAccount) {
    
    this.loanPortfolioAccount = loanPortfolioAccount;
    return this;
  }

   /**
   * Get loanPortfolioAccount
   * @return loanPortfolioAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanPortfolioAccount getLoanPortfolioAccount() {
    return loanPortfolioAccount;
  }


  public void setLoanPortfolioAccount(GetLoanPortfolioAccount loanPortfolioAccount) {
    this.loanPortfolioAccount = loanPortfolioAccount;
  }


  public GetLoanAccountingMappings overpaymentLiabilityAccount(GetLoanOverpaymentLiabilityAccount overpaymentLiabilityAccount) {
    
    this.overpaymentLiabilityAccount = overpaymentLiabilityAccount;
    return this;
  }

   /**
   * Get overpaymentLiabilityAccount
   * @return overpaymentLiabilityAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanOverpaymentLiabilityAccount getOverpaymentLiabilityAccount() {
    return overpaymentLiabilityAccount;
  }


  public void setOverpaymentLiabilityAccount(GetLoanOverpaymentLiabilityAccount overpaymentLiabilityAccount) {
    this.overpaymentLiabilityAccount = overpaymentLiabilityAccount;
  }


  public GetLoanAccountingMappings transfersInSuspenseAccount(GetLoanTransfersInSuspenseAccount transfersInSuspenseAccount) {
    
    this.transfersInSuspenseAccount = transfersInSuspenseAccount;
    return this;
  }

   /**
   * Get transfersInSuspenseAccount
   * @return transfersInSuspenseAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanTransfersInSuspenseAccount getTransfersInSuspenseAccount() {
    return transfersInSuspenseAccount;
  }


  public void setTransfersInSuspenseAccount(GetLoanTransfersInSuspenseAccount transfersInSuspenseAccount) {
    this.transfersInSuspenseAccount = transfersInSuspenseAccount;
  }


  public GetLoanAccountingMappings writeOffAccount(GetLoanWriteOffAccount writeOffAccount) {
    
    this.writeOffAccount = writeOffAccount;
    return this;
  }

   /**
   * Get writeOffAccount
   * @return writeOffAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetLoanWriteOffAccount getWriteOffAccount() {
    return writeOffAccount;
  }


  public void setWriteOffAccount(GetLoanWriteOffAccount writeOffAccount) {
    this.writeOffAccount = writeOffAccount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetLoanAccountingMappings getLoanAccountingMappings = (GetLoanAccountingMappings) o;
    return Objects.equals(this.fundSourceAccount, getLoanAccountingMappings.fundSourceAccount) &&
        Objects.equals(this.incomeFromFeeAccount, getLoanAccountingMappings.incomeFromFeeAccount) &&
        Objects.equals(this.incomeFromPenaltyAccount, getLoanAccountingMappings.incomeFromPenaltyAccount) &&
        Objects.equals(this.interestOnLoanAccount, getLoanAccountingMappings.interestOnLoanAccount) &&
        Objects.equals(this.loanPortfolioAccount, getLoanAccountingMappings.loanPortfolioAccount) &&
        Objects.equals(this.overpaymentLiabilityAccount, getLoanAccountingMappings.overpaymentLiabilityAccount) &&
        Objects.equals(this.transfersInSuspenseAccount, getLoanAccountingMappings.transfersInSuspenseAccount) &&
        Objects.equals(this.writeOffAccount, getLoanAccountingMappings.writeOffAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fundSourceAccount, incomeFromFeeAccount, incomeFromPenaltyAccount, interestOnLoanAccount, loanPortfolioAccount, overpaymentLiabilityAccount, transfersInSuspenseAccount, writeOffAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetLoanAccountingMappings {\n");
    sb.append("    fundSourceAccount: ").append(toIndentedString(fundSourceAccount)).append("\n");
    sb.append("    incomeFromFeeAccount: ").append(toIndentedString(incomeFromFeeAccount)).append("\n");
    sb.append("    incomeFromPenaltyAccount: ").append(toIndentedString(incomeFromPenaltyAccount)).append("\n");
    sb.append("    interestOnLoanAccount: ").append(toIndentedString(interestOnLoanAccount)).append("\n");
    sb.append("    loanPortfolioAccount: ").append(toIndentedString(loanPortfolioAccount)).append("\n");
    sb.append("    overpaymentLiabilityAccount: ").append(toIndentedString(overpaymentLiabilityAccount)).append("\n");
    sb.append("    transfersInSuspenseAccount: ").append(toIndentedString(transfersInSuspenseAccount)).append("\n");
    sb.append("    writeOffAccount: ").append(toIndentedString(writeOffAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

