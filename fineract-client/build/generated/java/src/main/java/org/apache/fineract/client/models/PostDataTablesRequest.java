/*
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.fineract.client.models.PostColumnHeaderData;

/**
 * PostDataTablesRequest
 */
@ApiModel(description = "PostDataTablesRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PostDataTablesRequest {
  public static final String SERIALIZED_NAME_APPTABLE_NAME = "apptableName";
  @SerializedName(SERIALIZED_NAME_APPTABLE_NAME)
  private String apptableName;

  public static final String SERIALIZED_NAME_COLUMNS = "columns";
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<PostColumnHeaderData> columns = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATATABLE_NAME = "datatableName";
  @SerializedName(SERIALIZED_NAME_DATATABLE_NAME)
  private String datatableName;

  public static final String SERIALIZED_NAME_MULTI_ROW = "multiRow";
  @SerializedName(SERIALIZED_NAME_MULTI_ROW)
  private Boolean multiRow;

  public PostDataTablesRequest() { 
  }

  public PostDataTablesRequest apptableName(String apptableName) {
    
    this.apptableName = apptableName;
    return this;
  }

   /**
   * Get apptableName
   * @return apptableName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "m_client", required = true, value = "")

  public String getApptableName() {
    return apptableName;
  }


  public void setApptableName(String apptableName) {
    this.apptableName = apptableName;
  }


  public PostDataTablesRequest columns(List<PostColumnHeaderData> columns) {
    
    this.columns = columns;
    return this;
  }

  public PostDataTablesRequest addColumnsItem(PostColumnHeaderData columnsItem) {
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<PostColumnHeaderData> getColumns() {
    return columns;
  }


  public void setColumns(List<PostColumnHeaderData> columns) {
    this.columns = columns;
  }


  public PostDataTablesRequest datatableName(String datatableName) {
    
    this.datatableName = datatableName;
    return this;
  }

   /**
   * Get datatableName
   * @return datatableName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "extra_client_details", required = true, value = "")

  public String getDatatableName() {
    return datatableName;
  }


  public void setDatatableName(String datatableName) {
    this.datatableName = datatableName;
  }


  public PostDataTablesRequest multiRow(Boolean multiRow) {
    
    this.multiRow = multiRow;
    return this;
  }

   /**
   * Allows to create multiple entries in the Data Table. Optional, defaults to false. If this property is not provided Data Table will allow only one entry.
   * @return multiRow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Allows to create multiple entries in the Data Table. Optional, defaults to false. If this property is not provided Data Table will allow only one entry.")

  public Boolean getMultiRow() {
    return multiRow;
  }


  public void setMultiRow(Boolean multiRow) {
    this.multiRow = multiRow;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostDataTablesRequest postDataTablesRequest = (PostDataTablesRequest) o;
    return Objects.equals(this.apptableName, postDataTablesRequest.apptableName) &&
        Objects.equals(this.columns, postDataTablesRequest.columns) &&
        Objects.equals(this.datatableName, postDataTablesRequest.datatableName) &&
        Objects.equals(this.multiRow, postDataTablesRequest.multiRow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apptableName, columns, datatableName, multiRow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostDataTablesRequest {\n");
    sb.append("    apptableName: ").append(toIndentedString(apptableName)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    datatableName: ").append(toIndentedString(datatableName)).append("\n");
    sb.append("    multiRow: ").append(toIndentedString(multiRow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

