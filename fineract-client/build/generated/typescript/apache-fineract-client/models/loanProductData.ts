/**
 * Apache Fineract REST API
 * Apache Fineract is a secure, multi-tenanted microfinance platform. The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The https://cui.fineract.dev[reference app] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation. Until we complete the new REST API documentation you still have the legacy documentation available https://fineract.apache.org/legacy-docs/apiLive.htm[here]. Please check https://fineract.apache.org/docs/current[the Fineract documentation] for more information.
 *
 * The version of the OpenAPI document: 0.0.0-NOT_A_GIT_REPOSITORY
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LoanProductBorrowerCycleVariationData } from './loanProductBorrowerCycleVariationData';
import { CurrencyData } from './currencyData';
import { LoanProductInterestRecalculationData } from './loanProductInterestRecalculationData';
import { LoanProductConfigurableAttributes } from './loanProductConfigurableAttributes';
import { FundData } from './fundData';
import { ChargeData } from './chargeData';
import { EnumOptionData } from './enumOptionData';


export interface LoanProductData { 
    allowPartialPeriodInterestCalcualtion?: boolean;
    amortizationType?: EnumOptionData;
    amortizationTypeOptions?: Array<EnumOptionData>;
    annualInterestRate?: number;
    chargeOptions?: Array<ChargeData>;
    closeDate?: string;
    compoundingToBePostedAsTransaction?: boolean;
    currency?: CurrencyData;
    daysInMonthType?: EnumOptionData;
    daysInYearType?: EnumOptionData;
    defaultDifferentialLendingRate?: number;
    description?: string;
    equalAmortization?: boolean;
    fixedPrincipalPercentagePerInstallment?: number;
    floatingInterestRateCalculationAllowed?: boolean;
    fundId?: number;
    fundName?: string;
    fundOptions?: Array<FundData>;
    getloanProductConfigurableAttributes?: LoanProductConfigurableAttributes;
    graceOnArrearsAgeing?: number;
    graceOnInterestCharged?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    id?: number;
    inArrearsTolerance?: number;
    interestCalculationPeriodType?: EnumOptionData;
    interestCalculationPeriodTypeOptions?: Array<EnumOptionData>;
    interestRateDifferential?: number;
    interestRateFrequencyType?: EnumOptionData;
    interestRateFrequencyTypeOptions?: Array<EnumOptionData>;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<LoanProductBorrowerCycleVariationData>;
    interestRecalculationData?: LoanProductInterestRecalculationData;
    interestRecalculationEnabled?: boolean;
    interestType?: EnumOptionData;
    interestTypeOptions?: Array<EnumOptionData>;
    linkedToFloatingInterestRates?: boolean;
    maxDifferentialLendingRate?: number;
    maxInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    maximumGapBetweenInstallments?: number;
    minDifferentialLendingRate?: number;
    minInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    minimumGapBetweenInstallments?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<LoanProductBorrowerCycleVariationData>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    principal?: number;
    principalVariationsForBorrowerCycle?: Array<LoanProductBorrowerCycleVariationData>;
    recurringMoratoriumOnPrincipalPeriods?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: EnumOptionData;
    repaymentFrequencyTypeOptions?: Array<EnumOptionData>;
    startDate?: string;
    transactionProcessingStrategyId?: number;
    transactionProcessingStrategyName?: string;
    variableInstallmentsAllowed?: boolean;
}

